name: Backend Test

on:
  push:
    paths-ignore:
      - 'rst/**'
      - '.github/workflows/*-translation.yml'
  workflow_dispatch:

env:
  # Skip building frontend in tarantoolctl rocks make
  CMAKE_DUMMY_WEBUI: true
  # Prerequisite for some etcd-related tests
  ETCD_PATH: etcd-v2.3.8/etcd

jobs:
  misc:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.8.0'
      - uses: actions/setup-python@v2

      # Setup sphinx
      - name: Cache pip packages
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./venv
          key: misc-venv-${{ hashFiles('rst/requirements.txt') }}-03
      -
        run: |
          python -m venv ./venv && . ./venv/bin/activate
          pip install -r rst/requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Setup tarantool
      - uses: tarantool/setup-tarantool@v1
        with:
          tarantool-version: '1.10'

      # Setup luacheck and ldoc
      - name: Cache rocks
        uses: actions/cache@v2
        id: cache-rocks
        with:
          path: .rocks/
          key: misc-rocks-${{ hashFiles('*.rockspec') }}-02
      -
        run: |
          tarantoolctl rocks install luacheck
          tarantoolctl rocks install ldoc --server=https://tarantool.github.io/LDoc/
        if: steps.cache-rocks.outputs.cache-hit != 'true'

      # Setup graphql cli
      - name: Cache npm
        uses: actions/cache@v2
        id: cache-npm
        with:
          path: node_modules
          key: npm-02
      -
        run: npm install graphql-cli@3.0.14
        if: steps.cache-npm.outputs.cache-hit != 'true'

      # Run tests
      - run: .rocks/bin/luacheck .
      - name: Run tarantoolctl rocks make
        run: |
          . ./venv/bin/activate
          tarantoolctl rocks make
        env:
          CMAKE_LDOC_FIND_REQUIRED: 'YES'
          CMAKE_SPHINX_FIND_REQUIRED: 'YES'
      - run: ./fetch-schema.sh
      - run: cmake -DJUST_CHECK=YES -P rst/BuildUML.cmake

      # Cleanup cached paths
      - run: tarantoolctl rocks remove cartridge

  run-tests:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['1.10', '2.7', '2.8', '2.9']
        os: [ubuntu-18.04]
        include:
        - os: macos-11
          tarantool: null # we don't choose version in brew
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-python@v2
      - uses: actions/checkout@v2
      - uses: tarantool/setup-tarantool@v1
        if: runner.os == 'Linux'
        with:
          tarantool-version: '${{ matrix.tarantool }}'

      - name: Install tarantool (brew)
        if: runner.os == 'macOS'
        run: brew install tarantool

      # Setup etcd
      - name: Install etcd (linux)
        if: runner.os == 'Linux'
        uses: ./.github/actions/setup-etcd
        with:
          etcd-version: v2.3.8
          install-prefix: etcd-v2.3.8
      - name: Install etcd (macos)
        if: runner.os == 'macOS'
        env:
          BASE_URL: "https://github.com/etcd-io/etcd/releases/download"
          ETCD_VER: v2.3.8
          INSTALL_PREFIX: etcd-v2.3.8
        run: |
          mkdir -p ${INSTALL_PREFIX}
          curl -L ${BASE_URL}/${ETCD_VER}/etcd-${ETCD_VER}-darwin-amd64.zip -o /tmp/etcd-${ETCD_VER}-darwin-amd64.zip
          unzip /tmp/etcd-${ETCD_VER}-darwin-amd64.zip -d /tmp
          mv /tmp/etcd-${ETCD_VER}-darwin-amd64/* ${INSTALL_PREFIX}
          # etcd-${ETCD_VER}/etcdctl
          # etcd-${ETCD_VER}/etcd
          echo "${INSTALL_PREFIX}" >> $GITHUB_PATH

      # Setup luatest
      - name: Cache rocks
        uses: actions/cache@v2
        id: cache-rocks
        with:
          path: .rocks/
          key: test-rocks-${{ runner.os }}-${{ hashFiles('*.rockspec') }}-03
      -
        run: tarantoolctl rocks install luatest 0.5.6
        if: steps.cache-rocks.outputs.cache-hit != 'true'

      # Setup pytest
      - name: Cache pytest
        uses: actions/cache@v2
        id: cache-pytest
        with:
          path: ./pytest-venv
          key: test-venv-${{ hashFiles('test/integration/requirements.txt') }}-03
      -
        run: |
          python -m venv ./pytest-venv && . ./pytest-venv/bin/activate
          pip install -r test/integration/requirements.txt
        if: steps.cache-pytest.outputs.cache-hit != 'true'

      - run: tarantoolctl rocks make
      - run: |
          ETCD_PATH=$(which etcd || true)
          if [ -n "$ETCD_PATH" ]; then
            export ETCD_PATH
          fi
          ulimit -n 12288 || true
          ulimit -n

      - run: .rocks/bin/luatest

      - name: Run pytest -v
        run: |
          . ./pytest-venv/bin/activate
          pytest -v

      # Cleanup cached paths
      - run: tarantoolctl rocks remove cartridge
